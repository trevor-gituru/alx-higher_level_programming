George Maroa <mgm.engineeringtie847@gmail.com>

#####################
module: 7-base_geometry
#####################

How to use the BaseGeometry class
+++++++++++++++++++++++++++++++++++

    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

    >>> m = __import__("7-base_geometry").__doc__
    >>> len(m) > 1
    True

    >>> c = __import__("7-base_geometry").BaseGeometry.__doc__
    >>> len(c) > 1
    True

    >>> f = __import__("7-base_geometry").BaseGeometry.area.__doc__
    >>> len(f) > 1
    True

    >>> f = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
    >>> len(f) > 1
    True

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12.4)
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", "integer")
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 0)
    Traceback (most recent call last):
    ...
    ValueError: my_int must be greater than 0

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", -7)
    Traceback (most recent call last):
    ...
    ValueError: my_int must be greater than 0

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("hello", 2, 3, 7)
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() takes 3 positional arguments but 5 were given